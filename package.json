{
    "name": "cypress_automation",
    "version": "1.0.0",
    "description": "QA automation project with cypress",
    "scripts": {
        "open": "npx cypress open",
        "test": "cypress run --browser chrome",
        "lintFix:js": "eslint --ignore-path .gitignore --fix .",
        "lintCheck:js": "eslint --ignore-path .gitignore .",
        "lintFix:css:stylelint": "stylelint --ignore-path .gitignore '**/*.css' --allow-empty-input --fix",
        "lintCheck:css:stylelint": "stylelint --ignore-path .gitignore '**/*.css' --allow-empty-input",
        "lintFix:json": "prettier --ignore-path .gitignore '**/*.json' --list-different --write",
        "lintCheck:json": "prettier --ignore-path .gitignore '**/*.json' --list-different",
        "lintCheck:feature": "gherkin-lint -c .gherkin-lintrc.json",
        "lintFixOnlyChangedJS": "eslint --ignore-path .gitignore --fix $(git diff --name-only --diff-filter=ACMRTUXB main | grep  -E \"(.js$|.ts$|.tsx$)\")",
        "lintCheckOnlyChangedJS": "eslint --ignore-path .gitignore $(git diff --name-only --diff-filter=ACMRTUXB main | grep  -E \"(.js$|.ts$|.tsx$)\")",
        "lintFixOnlyCssAndJson": "npm run lintFix:css:stylelint ; npm run lintFix:json",
        "lintCheckOnlyCssAndJson": "npm run lintCheck:css:stylelint ; npm run lintCheck:json",
        "lintFix": "npm run lintFixOnlyCssAndJson ; npm run lintFixOnlyChangedJS; npm run lintCheck:feature",
        "lintCheck": "npm run lintCheckOnlyCssAndJson ; npm run lintCheckOnlyChangedJS; npm run lintCheck:feature",
        "lintFixAll": "npm run lintFixOnlyCssAndJson ; npm run lintFix:js; npm run lintCheck:feature",
        "lintCheckAll": "npm run lintCheckOnlyCssAndJson && npm run lintCheck:js && npm run lintCheck:feature",
        "prepare": "husky",
        "postinstall": "husky",
        "pre-commit": "npm run lintFixAll",
        "pre-push": "npm run pre-commit && npm run test",
        "sonar-unix": "node sonar-project.js",
        "sonar-win": "node .\\sonar-project.js",
        "cy:report": "node ./cypress/reports/report.js",
        "pretest": "npm run clean:reports",
        "posttest": "npm run cy:report",
        "clean:reports": "if [ -d \"cypress/cucumber-report\" ]  ; then rm -r cypress/cucumber-report cypress/cucumber-json; fi"
    },
    "repository": {
        "type": "git",
        "url": "https://github.com/CarlosEstradaQA/Cypress_Automation.git"
    },
    "author": "Carlos Armando Estrada Torres",
    "license": "ISC",
    "cypress-cucumber-preprocessor": {
        "step_definitions": "cypress/e2e/step_definitions/",
        "cucumberJson": {
            "generate": true,
            "output": "/reports/cucumber_report.html",
            "screenshotsDirectory": "screenshots/",
            "storeScreenshots": true
        }
    },
    "dependencies": {
        "cypress": "^13.12.0",
        "cypress-cucumber-preprocessor": "^4.3.1",
        "moment": "^2.30.1",
        "multiple-cucumber-html-reporter": "^3.7.0"
    },
    "devDependencies": {
        "eslint-config-airbnb": "^19.0.4",
        "eslint-config-prettier": "^9.1.0",
        "eslint-plugin-cypress": "^3.4.0",
        "eslint-plugin-import": "^2.29.1",
        "gherkin-lint": "^4.2.4",
        "husky": "^9.1.4",
        "prettier": "^3.2.5",
        "prettier-plugin-jsdoc": "^1.3.0",
        "sonarqube-scanner": "^4.0.1",
        "stylelint": "^16.6.0",
        "stylelint-config-idiomatic-order": "^10.0.0",
        "stylelint-config-recommended": "^14.0.0"
    }
}
